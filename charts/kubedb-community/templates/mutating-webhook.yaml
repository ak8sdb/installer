{{ $featureGates := .Values.featureGates }}
{{- if .Values.global }}
  {{ $featureGates = mergeOverwrite dict .Values.featureGates .Values.global.featureGates }}
{{- end }}

{{- if .Values.apiserver.enableMutatingWebhook }}
{{- $caCrt := dig "data" "ca.crt" "unknown" (lookup "v1" "ConfigMap" .Release.Namespace "kube-root-ca.crt") | b64enc }}

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubedb.com
  labels:
    {{- include "kubedb-community.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
{{ if $featureGates.Elasticsearch }}
- name: elasticsearch.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/elasticsearches
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
{{ end }}

{{ if $featureGates.MongoDB }}
- name: mongodb.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mongodbs
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
{{ end }}

{{ end }}
